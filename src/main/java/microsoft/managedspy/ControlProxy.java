// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by jni4net. See http://jni4net.sourceforge.net/ 
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

package microsoft.managedspy;

@net.sf.jni4net.attributes.ClrType
public class ControlProxy extends system.Object {
    
    //<generated-proxy>
    private static system.Type staticType;
    
    protected ControlProxy(net.sf.jni4net.inj.INJEnv __env, long __handle) {
            super(__env, __handle);
    }
    
    @net.sf.jni4net.attributes.ClrConstructor("(LSystem/Windows/Forms/Control;)V")
    public ControlProxy(system.MarshalByRefObject instance) {
            super(((net.sf.jni4net.inj.INJEnv)(null)), 0);
        ControlProxy.__ctorControlProxy0(this, instance);
    }
    
    @net.sf.jni4net.attributes.ClrConstructor("()V")
    public ControlProxy() {
            super(((net.sf.jni4net.inj.INJEnv)(null)), 0);
        ControlProxy.__ctorControlProxy1(this);
    }
    
    @net.sf.jni4net.attributes.ClrConstructor("(LSystem/IntPtr;)V")
    public ControlProxy(long windowHandle) {
            super(((net.sf.jni4net.inj.INJEnv)(null)), 0);
        ControlProxy.__ctorControlProxy2(this, windowHandle);
    }

    @net.sf.jni4net.attributes.ClrMethod("(Lsystem/MarshalByRefObject;)V")
    private native static void __ctorControlProxy0(net.sf.jni4net.inj.IClrProxy thiz, system.MarshalByRefObject instance);
    
    @net.sf.jni4net.attributes.ClrMethod("()V")
    private native static void __ctorControlProxy1(net.sf.jni4net.inj.IClrProxy thiz);
    
    @net.sf.jni4net.attributes.ClrMethod("(J)V")
    private native static void __ctorControlProxy2(net.sf.jni4net.inj.IClrProxy thiz, long windowHandle);
    
    @net.sf.jni4net.attributes.ClrMethod("()LSystem/ComponentModel/AttributeCollection;")
    public native system.componentmodel.AttributeCollection GetAttributes();
    
    @net.sf.jni4net.attributes.ClrMethod("()LSystem/String;")
    public native String GetClassName();
    
    @net.sf.jni4net.attributes.ClrMethod("()LSystem/String;")
    public native String GetComponentName();
    
    @net.sf.jni4net.attributes.ClrMethod("()LSystem/ComponentModel/TypeConverter;")
    public native system.componentmodel.TypeConverter GetConverter();
    
    @net.sf.jni4net.attributes.ClrMethod("()LSystem/ComponentModel/EventDescriptor;")
    public native system.componentmodel.EventDescriptor GetDefaultEvent();
    
    @net.sf.jni4net.attributes.ClrMethod("()LSystem/ComponentModel/PropertyDescriptor;")
    public native system.componentmodel.PropertyDescriptor GetDefaultProperty();
    
    @net.sf.jni4net.attributes.ClrMethod("(LSystem/Type;)LSystem/Object;")
    public native system.Object GetEditor(system.Type editorBaseType);
    
    @net.sf.jni4net.attributes.ClrMethod("()LSystem/ComponentModel/EventDescriptorCollection;")
    public native system.componentmodel.EventDescriptorCollection GetEvents();
    
    @net.sf.jni4net.attributes.ClrMethod("([LSystem/Attribute;)LSystem/ComponentModel/EventDescriptorCollection;")
    public native system.componentmodel.EventDescriptorCollection GetEvents(system.Attribute[] attributes);
    
    @net.sf.jni4net.attributes.ClrMethod("()LSystem/ComponentModel/PropertyDescriptorCollection;")
    public native system.componentmodel.PropertyDescriptorCollection GetProperties();
    
    @net.sf.jni4net.attributes.ClrMethod("([LSystem/Attribute;)LSystem/ComponentModel/PropertyDescriptorCollection;")
    public native system.componentmodel.PropertyDescriptorCollection GetProperties(system.Attribute[] attributes);
    
    @net.sf.jni4net.attributes.ClrMethod("(LSystem/ComponentModel/PropertyDescriptor;)LSystem/Object;")
    public native system.Object GetPropertyOwner(system.componentmodel.PropertyDescriptor pd);
    
    @net.sf.jni4net.attributes.ClrMethod("()LSystem/Windows/Forms/Control;")
    public native system.MarshalByRefObject getNativeControl();
    
    @net.sf.jni4net.attributes.ClrMethod("()LSystem/Windows/Forms/Control;")
    public native system.MarshalByRefObject GetNativeControl();
    
    @net.sf.jni4net.attributes.ClrMethod("(LSystem/Object;LSystem/EventArgs;)V")
    public native void OnHandleCreated(system.Object sender, system.Object args);
    
    @net.sf.jni4net.attributes.ClrMethod("(LSystem/Object;LSystem/EventArgs;)V")
    public native void OnHandleDestroyed(system.Object sender, system.Object args);
    
    @net.sf.jni4net.attributes.ClrMethod("()LSystem/IntPtr;")
    public native long getHandle();
    
    @net.sf.jni4net.attributes.ClrMethod("(LSystem/IntPtr;)V")
    public native void setHandle(long __set_formal);
    
    @net.sf.jni4net.attributes.ClrMethod("()[LMicrosoft/ManagedSpy/ControlProxy;")
    public native ControlProxy[] getChildren();
    
    @net.sf.jni4net.attributes.ClrMethod("()LSystem/Diagnostics/Process;")
    public native system.MarshalByRefObject getOwningProcess();
    
    @net.sf.jni4net.attributes.ClrMethod("()Z")
    public native boolean isManaged();
    
    @net.sf.jni4net.attributes.ClrMethod("()LSystem/Type;")
    public native system.Type getComponentType();
    
    @net.sf.jni4net.attributes.ClrMethod("(LMicrosoft/ManagedSpy/ControlProxyEventHandler;)V")
    public native void addEventFired(microsoft.managedspy.ControlProxyEventHandler value);
    
    @net.sf.jni4net.attributes.ClrMethod("(LMicrosoft/ManagedSpy/ControlProxyEventHandler;)V")
    public native void removeEventFired(microsoft.managedspy.ControlProxyEventHandler value);
    
    @net.sf.jni4net.attributes.ClrMethod("(LMicrosoft/ManagedSpy/ProxyEventArgs;)V")
    public native void RaiseEvent(microsoft.managedspy.ProxyEventArgs args);
    
    @net.sf.jni4net.attributes.ClrMethod("(LSystem/String;)V")
    public native void SubscribeEvent(String eventName);
    
    @net.sf.jni4net.attributes.ClrMethod("(LSystem/ComponentModel/EventDescriptor;)V")
    public native void SubscribeEvent(system.componentmodel.EventDescriptor ed);
    
    @net.sf.jni4net.attributes.ClrMethod("(LSystem/String;)V")
    public native void UnsubscribeEvent(String eventName);
    
    @net.sf.jni4net.attributes.ClrMethod("(LSystem/ComponentModel/EventDescriptor;)V")
    public native void UnsubscribeEvent(system.componentmodel.EventDescriptor ed);
    
    @net.sf.jni4net.attributes.ClrMethod("(LSystem/String;[LSystem/Object;)LSystem/Object;")
    public native system.Object Invoke(String methodName, system.Object[] o);
    
    @net.sf.jni4net.attributes.ClrMethod("(ILSystem/IntPtr;LSystem/IntPtr;)V")
    public native void SendMessage(int message, long wParam, long lParam);
    
    @net.sf.jni4net.attributes.ClrMethod("(LSystem/IntPtr;)V")
    public native void SetEventWindow(long eventWindow);
    
    @net.sf.jni4net.attributes.ClrMethod("()LMicrosoft/ManagedSpy/ControlProxy;")
    public native ControlProxy getParent();
    
    @net.sf.jni4net.attributes.ClrMethod("(LSystem/String;)LSystem/Object;")
    public native system.Object GetValue(String propertyName);
    
    @net.sf.jni4net.attributes.ClrMethod("(LSystem/String;LSystem/Object;)V")
    public native void SetValue(String propertyName, system.Object value);
    
    @net.sf.jni4net.attributes.ClrMethod("(LSystem/ValueType;)LSystem/ValueType;")
    public native system.ValueType PointToClient(system.ValueType p);
    
    @net.sf.jni4net.attributes.ClrMethod("(LSystem/ValueType;)LSystem/ValueType;")
    public native system.ValueType PointToScreen(system.ValueType p);
    
    @net.sf.jni4net.attributes.ClrMethod("(LSystem/IntPtr;)LMicrosoft/ManagedSpy/ControlProxy;")
    public native static ControlProxy FromHandle(long windowHandle);
    
    @net.sf.jni4net.attributes.ClrMethod("()[LMicrosoft/ManagedSpy/ControlProxy;")
    public native static ControlProxy[] getTopLevelWindows();
    
    public static system.Type typeof() {
        return ControlProxy.staticType;
    }
    
    private static void InitJNI(net.sf.jni4net.inj.INJEnv env, system.Type staticType) {
        ControlProxy.staticType = staticType;
    }
    //</generated-proxy>
}
