// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by jni4net. See http://jni4net.sourceforge.net/ 
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

package system.componentmodel;

@net.sf.jni4net.attributes.ClrType
public class EventDescriptorCollection extends system.Object implements system.collections.ICollection, system.collections.IEnumerable, system.collections.IList {
    
    //<generated-proxy>
    private static system.Type staticType;
    
    protected EventDescriptorCollection(net.sf.jni4net.inj.INJEnv __env, long __handle) {
            super(__env, __handle);
    }
    
    @net.sf.jni4net.attributes.ClrConstructor("([LSystem/ComponentModel/EventDescriptor;)V")
    public EventDescriptorCollection(EventDescriptor[] events) {
            super(((net.sf.jni4net.inj.INJEnv)(null)), 0);
        EventDescriptorCollection.__ctorEventDescriptorCollection0(this, events);
    }
    
    @net.sf.jni4net.attributes.ClrConstructor("([LSystem/ComponentModel/EventDescriptor;Z)V")
    public EventDescriptorCollection(EventDescriptor[] events, boolean readOnly) {
            super(((net.sf.jni4net.inj.INJEnv)(null)), 0);
        EventDescriptorCollection.__ctorEventDescriptorCollection1(this, events, readOnly);
    }
    
    @net.sf.jni4net.attributes.ClrMethod("([Lsystem/componentmodel/EventDescriptor;)V")
    private native static void __ctorEventDescriptorCollection0(net.sf.jni4net.inj.IClrProxy thiz, EventDescriptor[] events);
    
    @net.sf.jni4net.attributes.ClrMethod("([Lsystem/componentmodel/EventDescriptor;Z)V")
    private native static void __ctorEventDescriptorCollection1(net.sf.jni4net.inj.IClrProxy thiz, EventDescriptor[] events, boolean readOnly);
    
    @net.sf.jni4net.attributes.ClrMethod("(LSystem/Array;I)V")
    public native void CopyTo(system.Array array, int index);
    
    @net.sf.jni4net.attributes.ClrMethod("()I")
    public native int getCount();
    
    @net.sf.jni4net.attributes.ClrMethod("()LSystem/Object;")
    public native system.Object getSyncRoot();
    
    @net.sf.jni4net.attributes.ClrMethod("()Z")
    public native boolean isSynchronized();
    
    @net.sf.jni4net.attributes.ClrMethod("()LSystem/Collections/IEnumerator;")
    public native system.collections.IEnumerator GetEnumerator();
    
    @net.sf.jni4net.attributes.ClrMethod("(I)LSystem/Object;")
    public native system.Object getItem(int index);
    
    @net.sf.jni4net.attributes.ClrMethod("(ILSystem/Object;)V")
    public native void setItem(int index, system.Object value);
    
    @net.sf.jni4net.attributes.ClrMethod("(LSystem/Object;)I")
    public native int Add(system.Object value);
    
    @net.sf.jni4net.attributes.ClrMethod("(LSystem/Object;)Z")
    public native boolean Contains(system.Object value);
    
    @net.sf.jni4net.attributes.ClrMethod("()V")
    public native void Clear();
    
    @net.sf.jni4net.attributes.ClrMethod("()Z")
    public native boolean isReadOnly();
    
    @net.sf.jni4net.attributes.ClrMethod("()Z")
    public native boolean isFixedSize();
    
    @net.sf.jni4net.attributes.ClrMethod("(LSystem/Object;)I")
    public native int IndexOf(system.Object value);
    
    @net.sf.jni4net.attributes.ClrMethod("(ILSystem/Object;)V")
    public native void Insert(int index, system.Object value);
    
    @net.sf.jni4net.attributes.ClrMethod("(LSystem/Object;)V")
    public native void Remove(system.Object value);
    
    @net.sf.jni4net.attributes.ClrMethod("(I)V")
    public native void RemoveAt(int index);
    
    @net.sf.jni4net.attributes.ClrMethod("(LSystem/String;)LSystem/ComponentModel/EventDescriptor;")
    public native EventDescriptor getItem(String name);
    
    @net.sf.jni4net.attributes.ClrMethod("(LSystem/ComponentModel/EventDescriptor;)I")
    public native int Add(EventDescriptor value);
    
    @net.sf.jni4net.attributes.ClrMethod("(LSystem/ComponentModel/EventDescriptor;)Z")
    public native boolean Contains(EventDescriptor value);
    
    @net.sf.jni4net.attributes.ClrMethod("(LSystem/String;Z)LSystem/ComponentModel/EventDescriptor;")
    public native EventDescriptor Find(String name, boolean ignoreCase);
    
    @net.sf.jni4net.attributes.ClrMethod("(LSystem/ComponentModel/EventDescriptor;)I")
    public native int IndexOf(EventDescriptor value);
    
    @net.sf.jni4net.attributes.ClrMethod("(ILSystem/ComponentModel/EventDescriptor;)V")
    public native void Insert(int index, EventDescriptor value);
    
    @net.sf.jni4net.attributes.ClrMethod("(LSystem/ComponentModel/EventDescriptor;)V")
    public native void Remove(EventDescriptor value);
    
    @net.sf.jni4net.attributes.ClrMethod("()LSystem/ComponentModel/EventDescriptorCollection;")
    public native EventDescriptorCollection Sort();
    
    @net.sf.jni4net.attributes.ClrMethod("([LSystem/String;)LSystem/ComponentModel/EventDescriptorCollection;")
    public native EventDescriptorCollection Sort(String[] names);
    
    @net.sf.jni4net.attributes.ClrMethod("([LSystem/String;LSystem/Collections/IComparer;)LSystem/ComponentModel/EventDescriptorCollection;")
    public native EventDescriptorCollection Sort(String[] names, system.Object comparer);
    
    @net.sf.jni4net.attributes.ClrMethod("(LSystem/Collections/IComparer;)LSystem/ComponentModel/EventDescriptorCollection;")
    public native EventDescriptorCollection Sort(system.Object comparer);
    
    public static system.Type typeof() {
        return EventDescriptorCollection.staticType;
    }
    
    private static void InitJNI(net.sf.jni4net.inj.INJEnv env, system.Type staticType) {
        EventDescriptorCollection.staticType = staticType;
    }
    //</generated-proxy>
}
