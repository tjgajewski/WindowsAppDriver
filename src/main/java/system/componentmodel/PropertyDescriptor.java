// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by jni4net. See http://jni4net.sourceforge.net/ 
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

package system.componentmodel;

@net.sf.jni4net.attributes.ClrType
public class PropertyDescriptor extends system.Object {
    
    //<generated-proxy>
    private static system.Type staticType;
    
    protected PropertyDescriptor(net.sf.jni4net.inj.INJEnv __env, long __handle) {
            super(__env, __handle);
    }
    
    protected PropertyDescriptor() {
            super(((net.sf.jni4net.inj.INJEnv)(null)), 0);
    }
    
    @net.sf.jni4net.attributes.ClrMethod("()LSystem/Type;")
    public native system.Type getComponentType();
    
    @net.sf.jni4net.attributes.ClrMethod("()LSystem/ComponentModel/TypeConverter;")
    public native TypeConverter getConverter();
    
    @net.sf.jni4net.attributes.ClrMethod("()Z")
    public native boolean isLocalizable();
    
    @net.sf.jni4net.attributes.ClrMethod("()Z")
    public native boolean isReadOnly();
    
    @net.sf.jni4net.attributes.ClrMethod("()LSystem/ComponentModel/DesignerSerializationVisibility;")
    public native system.Enum getSerializationVisibility();
    
    @net.sf.jni4net.attributes.ClrMethod("()LSystem/Type;")
    public native system.Type getPropertyType();
    
    @net.sf.jni4net.attributes.ClrMethod("(LSystem/Object;LSystem/EventHandler;)V")
    public native void AddValueChanged(system.Object component, system.EventHandler handler);
    
    @net.sf.jni4net.attributes.ClrMethod("(LSystem/Object;)Z")
    public native boolean CanResetValue(system.Object component);
    
    @net.sf.jni4net.attributes.ClrMethod("()LSystem/ComponentModel/PropertyDescriptorCollection;")
    public native system.componentmodel.PropertyDescriptorCollection GetChildProperties();
    
    @net.sf.jni4net.attributes.ClrMethod("([LSystem/Attribute;)LSystem/ComponentModel/PropertyDescriptorCollection;")
    public native system.componentmodel.PropertyDescriptorCollection GetChildProperties(system.Attribute[] filter);
    
    @net.sf.jni4net.attributes.ClrMethod("(LSystem/Object;)LSystem/ComponentModel/PropertyDescriptorCollection;")
    public native system.componentmodel.PropertyDescriptorCollection GetChildProperties(system.Object instance);
    
    @net.sf.jni4net.attributes.ClrMethod("(LSystem/Object;[LSystem/Attribute;)LSystem/ComponentModel/PropertyDescriptorCollection;")
    public native system.componentmodel.PropertyDescriptorCollection GetChildProperties(system.Object instance, system.Attribute[] filter);
    
    @net.sf.jni4net.attributes.ClrMethod("(LSystem/Type;)LSystem/Object;")
    public native system.Object GetEditor(system.Type editorBaseType);
    
    @net.sf.jni4net.attributes.ClrMethod("(LSystem/Object;)LSystem/Object;")
    public native system.Object GetValue(system.Object component);
    
    @net.sf.jni4net.attributes.ClrMethod("(LSystem/Object;LSystem/EventHandler;)V")
    public native void RemoveValueChanged(system.Object component, system.EventHandler handler);
    
    @net.sf.jni4net.attributes.ClrMethod("(LSystem/Object;)V")
    public native void ResetValue(system.Object component);
    
    @net.sf.jni4net.attributes.ClrMethod("(LSystem/Object;LSystem/Object;)V")
    public native void SetValue(system.Object component, system.Object value);
    
    @net.sf.jni4net.attributes.ClrMethod("(LSystem/Object;)Z")
    public native boolean ShouldSerializeValue(system.Object component);
    
    @net.sf.jni4net.attributes.ClrMethod("()Z")
    public native boolean getSupportsChangeEvents();
    
    public static system.Type typeof() {
        return PropertyDescriptor.staticType;
    }
    
    private static void InitJNI(net.sf.jni4net.inj.INJEnv env, system.Type staticType) {
        PropertyDescriptor.staticType = staticType;
    }
    //</generated-proxy>
}
